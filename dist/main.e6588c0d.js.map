{"version":3,"sources":["src/main.jsx"],"names":["createElement","type","props","children","map","item","createTextNode","value","nodeValue","isEvent","name","startsWith","createDom","element","isDomElement","dom","isTextElement","document","Object","keys","filter","forEach","eventType","toLowerCase","substring","addEventListener","child","appendChild","render","container","React","stateArr","currentStateIndex","useState","initialValue","length","statePair","setState","newValue","clean","getElementById","push","currentStatePair","Counter","state","handleClick","e","App","console","log","innerHTML"],"mappings":"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","file":"main.e6588c0d.js","sourceRoot":"..","sourcesContent":["const createElement = (type, props, ...children) => {\n    return {\n        type,\n        props: {\n            ...props,\n            children: children.map(item => \n                typeof item === \"object\" ? item : createTextNode(item)   \n            )\n        }\n    }\n}\n\nconst createTextNode = (value) => {\n    return {\n        type: \"TEXT\",\n        props: {\n            nodeValue: value,\n            children: []\n        }\n    }\n}\n\nconst isEvent = (name) => name.startsWith(\"on\");\n\nconst createDom = (element) => {\n    const {type, props} = element;\n    const {children} = props;\n    const isDomElement = typeof type === \"string\";\n    let dom;\n    if(isDomElement) {\n        const isTextElement = type === \"TEXT\";\n        dom = isTextElement\n            ? document.createTextNode(props.nodeValue)\n            : document.createElement(type);\n        Object.keys(props)\n            .filter(isEvent)\n            .forEach(name => {\n                const eventType = name.toLowerCase().substring(2);\n                dom.addEventListener(eventType, props[name]);\n            })\n        children.map(child => dom.appendChild(createDom(child)))\n        return dom;\n    } else {\n        let element = type(props);\n        return createDom(element)\n    }\n}\n\nconst render = (element, container) => {\n    let dom = createDom(element);\n    container.appendChild(dom);\n}\n\n\n\nconst React = {\n    createElement,\n    stateArr: [],\n    currentStateIndex: 0,\n    useState(initialValue) {\n        if(this.currentStateIndex === this.stateArr.length) { \n            const statePair = {\n                value: initialValue,\n                setState(newValue) {\n                    statePair.value = newValue;\n                    React.currentStateIndex = 0;\n                    clean();\n                    render(<App/>, document.getElementById(\"root\"));\n                }\n            }\n            this.stateArr.push(statePair);\n        }\n        const currentStatePair = this.stateArr[this.currentStateIndex]\n        this.currentStateIndex += 1;\n        return [currentStatePair.value, currentStatePair.setState];\n    }\n}\n\nconst Counter = () => {\n    const [state, setState] = React.useState(0);\n    const handleClick = (e) => {\n        setState(state + 1);\n    }\n    return <h1 onClick={handleClick}>{state}</h1>\n}\nconst App = () => {\n    console.log(\"rerendering\")\n    return <div><Counter /></div>\n}\n\nconst clean = ()  => {\n    document.getElementById(\"root\").innerHTML = \"\";\n}\n\nrender(<App/>, document.getElementById(\"root\"));"]}